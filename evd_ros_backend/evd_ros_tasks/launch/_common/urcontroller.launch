 <launch>

  <arg name="type" default="physical"/> <!-- physical, simulated, planner : used for prefix -->
  <arg name="ip_address" default="127.0.0.1"/>
  <arg name="port" default="50002"/>
  <arg name="reverse_port" default="50001"/>
  <arg name="fake_gripper" default="true"/>

  <arg name="kinematics_config" default="$(find ur_description)/config/ur3e/default_kinematics.yaml"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur3e.xacro' kinematics_config:=$(arg kinematics_config)"/>

  <!-- Launch robot driver -->
  <include file="$(find ur_robot_driver)/launch/ur_control.launch">
    <arg name="debug" value="false"/>
    <arg name="use_tool_communication" value="false"/>
    <arg name="controller_config_file" value="$(find ur_robot_driver)/config/ur3_controllers.yaml"/>
    <arg name="robot_ip" value="$(arg ip_address)"/>
    <arg name="reverse_port" value="$(arg reverse_port)"/>
    <arg name="script_sender_port" value="$(arg port)"/>
    <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    <arg name="tf_prefix" value="$(arg type)_"/>
    <arg name="controllers" value="joint_state_controller scaled_pos_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
    <arg name="stopped_controllers" value="pos_traj_controller joint_group_vel_controller"/>
    <arg name="headless_mode" value="false"/>
    <arg name="tool_voltage" value="0"/>
    <arg name="tool_parity" value="0"/>
    <arg name="tool_baud_rate" value="115200"/>
    <arg name="tool_stop_bits" value="1"/>
    <arg name="tool_rx_idle_chars" value="1.5"/>
    <arg name="tool_tx_idle_chars" value="3.5"/>
    <arg name="tool_device_name" value="/tmp/ttyUR"/>
    <arg name="tool_tcp_port" value="54321"/>
  </include>

  <!-- Launch gripper driver -->
  <node if="$(arg fake_gripper)" pkg="robotiq_85_driver" type="fake_robotiq_85_driver.py" name="fake_robotiq_85_driver" respawn="true" output="screen"/>
  <node unless="$(arg fake_gripper)" pkg="robotiq_85_driver" type="robotiq_85_driver_remote_serial" name="robotiq_85_driver" respawn="true" output="screen">
      <param name="num_grippers" value="1" />
      <param name="comport" value="/tmp/ttyUR" />
      <param name="baud" value="115200" />
  </node>

  <!-- Handle Robot State -->
  <node name="joint_remapper" pkg="evd_ros_core" type="joint_remapper.py">
    <rosparam param="input_topics">[joint_states, gripper/joint_state]</rosparam>
    <param name="output_topic" value="joint_states_labeled"/>
    <param name="prefix" value="$(arg type)_"/>
  </node>

  <!-- Higher-level controller for communication with evd_ros -->
  <node name="ur_controller" pkg="evd_ros_tasks" type="ur_controller.py" output="screen"/>

</launch>
