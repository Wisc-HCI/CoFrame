<launch>

  <arg name="simulate_physical_robot" default='true'/>
  <arg name="limited" default='false' />


  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find cobots_core)/description/physical_and_simulated_robot.xacro'" />


  <!-- Physical Robot Bringup -->
  <group unless="$(arg simulate_physical_robot)" ns="physical">
    <!-- Launch robot driver -->
    <include file="$(find robot_bringup)/universal_robots/ur3e/bringup.launch">
      <arg name="robot_ip" value="10.134.71.9" />
    </include>

    <!-- Launch gripper driver -->
    <node name="urscript_gripper_action_server" pkg="robotiq_85_driver" type="urscript_gripper_action_server.py" output="screen" respawn="false">
      <param name="speed" value="255"/>
      <param name="urscript_topic" value="ur_driver/URScript"/>
    </node>

    <node name="physical_joint_remapper" pkg="cobots_core" type="joint_remapper.py">
      <rosparam param="input_topics">[gripper/joint_state, ur/joint_states]</rosparam>
      <param name="output_topic" value="joint_states"/>
      <param name="prefix" value="physical_"/>
    </node>

    <node name="physical_robot_controller" pkg="cobots_core" type="ur_controller.py">
        <param name="timestep" value="0.12"/>
        <param name="lookahead" value="0.1"/>
        <param name="gain" value="100"/>
        <param name="base_frame" value="physical_base_link"/>
        <param name="ee_frame" value="physical_ee_link"/>
        <rosparam param="time_scalars">[100,100,100,100,100,100]</rosparam>
        <param name="steady_state_length" value="3"/>
        <param name="steady_state_threshold" value="0.01"/>
    </node>

  </group>
  <group if="$(arg simulate_physical_robot)" ns="physical">

    <node name="physical_robot_controller" pkg="cobots_core" type="sim_controller.py" output="screen">
        <param name="timestep" value="0.12"/>
        <param name="lookahead" value="0.1"/>
        <param name="gain" value="100"/>
        <param name="base_frame" value="physical_base_link"/>
        <param name="ee_frame" value="physical_ee_link"/>
        <rosparam param="time_scalars">[100,100,100,100,100,100]</rosparam>
        <param name="gripper_joint" value="robotiq_85_left_knuckle_joint"/>
    </node>

    <node name="physical_joint_remapper" pkg="cobots_core" type="joint_remapper.py">
      <rosparam param="input_topics">[sim_controller/joint_states]</rosparam>
      <param name="output_topic" value="joint_states"/>
      <param name="prefix" value="physical_"/>
    </node>
  </group>

  <!-- Simulated Robot Bringup -->
  <group ns="simulated">
    <node name="simulated_robot_controller" pkg="cobots_core" type="sim_controller.py">
        <param name="timestep" value="0.12"/>
        <param name="lookahead" value="0.1"/>
        <param name="gain" value="100"/>
        <param name="base_frame" value="simulated_base_link"/>
        <param name="ee_frame" value="simulated_ee_link"/>
        <rosparam param="time_scalars">[100,100,100,100,100,100]</rosparam>
        <param name="gripper_joint" value="robotiq_85_left_knuckle_joint"/>
    </node>

    <node name="simulated_joint_remapper" pkg="cobots_core" type="joint_remapper.py">
      <rosparam param="input_topics">[sim_controller/joint_states]</rosparam>
      <param name="output_topic" value="joint_states"/>
      <param name="prefix" value="simulated_"/>
    </node>
  </group>

  <!-- Global State Publishers -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/>
    <rosparam param="/source_list">[physical/joint_states,simulated/joint_states]</rosparam>
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

</launch>
