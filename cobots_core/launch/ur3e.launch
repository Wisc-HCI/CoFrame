<launch>
  <param name="robot_type" value="ur3e" />

  <arg name="simulated" default='true'/>
  <arg name="limited" default='false' />
  <arg name="planner" default="ur"/>
  <arg name="load_rviz_cfg" default="true"/>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_descriptions)/urdf/universal_robots/relaxed_ik_ur3e_robotiq_85.xacro'" />

  <!-- If simulated, we do not have a robot connected -->
  <group if="$(eval arg('simulated') == true)">
    <param name="robot_connected" value="false" />
  </group>

  <!-- Else, we launch physical robot -->
  <group if="$(eval arg('simulated') == false)">
    <param name="robot_connected" value="true" />

    <!-- Launch robot driver -->
    <include file="$(find robot_bringup)/universal_robots/ur3e/bringup.launch">
      <arg name="robot_ip" value="10.134.71.9" />
    </include>

    <!-- Launch gripper driver -->
    <!-- Run gripper command action server, which receives planned motion goal under "gripper_command". After receiving the command from Moveit Rviz Plugin, this node act as an actionlib client and send the goal to the finger position action server from kinova_driver.  -->
    <node name="urscript_gripper_action_server" pkg="robotiq_85_driver" type="urscript_gripper_action_server.py" output="screen" respawn="false">
      <param name="speed" value="255"/>
      <param name="urscript_topic" value="/ur_driver/URScript"/>
    </node>

  </group>

  <!-- Handle Joint-space -->
  <group if="$(eval arg('simulated') == true)">
    <param name="robot_connected" value="false" />

    <node name="virtual_robot_controller" pkg="robot_behavior" type="virtual_robot_controller.py">
      <param name="~gripper_joint" value="robotiq_85_left_knuckle_joint" />
    </node>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="true"/>
      <rosparam param="/source_list">[/virtual_controller/joint_states]</rosparam>
    </node>
  </group>

  <group if="$(eval arg('simulated') == false)">

    <!-- Joint Publisher -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">['/gripper/joint_state','/ur/joint_states']</rosparam>
    </node>

  </group>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- RVIZ -->
  <node if="$(arg load_rviz_cfg)" type="rviz" name="rviz" pkg="rviz" args="-d $(find cobots_core)/rviz/ur3e.rviz"/>
  <node unless="$(arg load_rviz_cfg)" type="rviz" name="rviz" pkg="rviz"/>

</launch>
